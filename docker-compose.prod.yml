version: '3'

services:
  reverse-proxy:
    image: traefik:v2.5
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.prod.yml:/etc/traefik/traefik.yml
      - ./userfile:/etc/traefik/usersfile
    networks:
      - web
    restart: always
  
  api:
    image: scrooge-api
    volumes:
      - ./api/.env:/app/.env
    labels:
      - "traefik.http.routers.api.rule=Host(`${API_HOST_PROD}`)"
      - "traefik.docker.network=scrooge_v2_web"
      - "traefik.http.middlewares.apiAuth.basicauth.usersfile=/etc/traefik/usersfile"
      - "traefik.http.routers.api.middlewares=apiAuth@docker"
    networks:
      - web
      - internal
    restart: always

  app:
    image: scrooge-app
    volumes:
      - ./app/.env:/app/.env
    labels:
      - "traefik.http.routers.app.rule=Host(`${APP_HOST_PROD}`)"
      - "traefik.http.routers.app.middlewares=apiAuth@docker"
    networks:
      - web
    restart: always

  bot:
    image: scrooge-bot
    volumes:
      - ./bot/.env:/app/.env
    networks:
      - web
    restart: always

  mongo:
    image: mongo:5.0.5
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASS}"
    volumes:
      - ./mongo:/data/db
    ports:
      - 27017:27017
    networks:
      - internal
    restart: always


networks:
  internal:
    internal: true
  web:
    internal: false